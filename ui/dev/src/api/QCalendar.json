{
  "type": "component",
  "meta": {
    "docsUrl": "https://quasarframework.github.io/quasar-ui-qcalendar/docs"
  },
  "props": {
    "value": {
      "type": "String",
      "category": "model",
      "desc": "v-model; When set as YYYY-mm-dd, the calendar will display the current view on this date. If empty, then it will be changed to the current date which will be emitted",
      "required": true,
      "default": "now",
      "applicable": [
        "All"
      ],
      "examples": [
        "v-model=\"2019-04-01\"",
        "v-model=\"2020-08-08\""
      ]
    },
    "view": {
      "type": "String",
      "category": "model",
      "desc": "The type of calendar view to be displayed",
      "applicable": [
        "All"
      ],
      "values": [
        "month",
        "week",
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "month-scheduler",
        "week-scheduler",
        "scheduler",
        "day-scheduler",
        "2day-scheduler",
        "3day-scheduler",
        "4day-scheduler",
        "5day-scheduler",
        "6day-scheduler",
        "custom-scheduler",
        "month-agenda",
        "week-agenda",
        "day-agenda",
        "2day-agenda",
        "3day-agenda",
        "4day-agenda",
        "5day-agenda",
        "6day-agenda",
        "month-interval",
        "custom-interval"
      ],
      "examples": [
        "view=\"week\"",
        "view=\"month\"",
        "view=\"week-agenda\""
      ]
    },
    "dark": {
      "type": "Boolean",
      "category": "style",
      "desc": "Places a calendar in dark mode",
      "applicable": [
        "all"
      ],
      "addedIn": "v1.5.1"
    },
    "bordered": {
      "type": "Boolean",
      "category": "style",
      "desc": "Places a border around the calendar",
      "applicable": [
        "all"
      ],
      "addedIn": "v1.5.0"
    },
    "now": {
      "type": "String",
      "category": "model",
      "desc": "This is the currently displayed date (highlighted). If not set, then the current date is used",
      "applicable": [
        "All"
      ],
      "examples": [
        "now=\"2019-04-01\"",
        "now=\"2020-08-08\""
      ]
    },
    "weekdays": {
      "type": "Array",
      "category": "model",
      "desc": "This is the days of the week and in which order they are displayed. If you want Monday as the first day of the week, you would use [1,2,3,4,5,6,0]. If you want a 5-day work week you would use [1,2,3,4,5]",
      "default": "[0,1,2,3,4,5,6]",
      "applicable": [
        "All"
      ],
      "examples": [
        ":weekdays=\"[1,2,3,4,5,6,0]\"",
        ":weekdays=\"[1,2,3,4,5]\""
      ]
    },
    "no-active-date": {
      "type": "Boolean",
      "category": "behavior",
      "addedIn": "1.4.0",
      "desc": "This controls whether the `q-active-date` css class is set when a user clicks on a date label (button)",
      "applicable": [
        "All"
      ]
    },
    "disabled-days": {
      "type": "Array",
      "category": "model",
      "desc": "An array of string dates in the form YYYY-mm-dd that will be disabled",
      "applicable": [
        "All"
      ],
      "examples": [
        ":disabled-days=\"['2019-04-01', '2019-04-02', '2019-04-03', '2019-04-04']\""
      ]
    },
    "locale": {
      "type": "String",
      "category": "model",
      "desc": "Used to change the locale of the calendar",
      "default": "en-us",
      "applicable": [
        "All"
      ],
      "examples": [
        "locale=\"de-de\"",
        "locale=\"de\"",
        "locale=\"fr\"",
        "locale=\"pl\""
      ]
    },
    "max-days": {
      "type": "String",
      "category": "model",
      "desc": "The number of days to be displayed. Applicable only for custom-interval, scheduler and agenda views",
      "default": 7,
      "applicable": [
        "custom-interval",
        "scheduler",
        "agenda"
      ],
      "examples": [
        "max-days=\"14\"",
        "max-days=\"10\""
      ]
    },
    "color": {
      "type": "String",
      "category": "style",
      "desc": "This is the color used current day (now) highlighting. It can be from the from the [Quasar Color Palette](https://quasar.dev/style/color-palette), CSS named color or a CSS color (#, rgb, rgba, hls, etc)",
      "applicable": [
        "All"
      ],
      "examples": [
        "color=\"orange-7\"",
        "color=\"blue-grey-4\"",
        "color=\"#00CCFC\"",
        "color=\"crimson\""
      ]
    },
    "enable-theme": {
      "type": "Boolean",
      "category": "style",
      "desc": "Turns on theme support",
      "applicable": [
        "All"
      ]
    },
    "theme": {
      "type": "Object",
      "category": "style",
      "desc": "Object containing keys and values that overrides the calendar's color properties. See online demo for format of a theme",
      "applicable": [
        "All"
      ]
    },
    "hide-header": {
      "type": "Boolean",
      "category": "style",
      "desc": "Hide the calendar header.",
      "applicable": [
        "All"
      ]
    },
    "short-weekday-label": {
      "type": "Boolean",
      "category": "style",
      "desc": "Displays the weekday label in short format. For instance, 'Monday' would become 'Mon'",
      "applicable": [
        "All"
      ]
    },
    "animated": {
      "type": "Boolean",
      "category": "behavior",
      "desc": "Turns on animation",
      "applicable": [
        "All"
      ]
    },
    "transition-prev": {
      "type": "String",
      "category": "behavior",
      "desc": "When animated property is true, transition to use for previous calendar view",
      "default": "slide-right",
      "applicable": [
        "All"
      ],
      "examples": [
        "transition-prev=\"flip-right\""
      ]
    },
    "transition-next": {
      "type": "String",
      "category": "behavior",
      "desc": "When animated property is true, transition to use for next calendar view",
      "default": "slide-left",
      "applicable": [
        "All"
      ],
      "examples": [
        "transition-next=\"flip-left\""
      ]
    },
    "drag-over-func": {
      "type": "Function",
      "category": "behavior",
      "desc": "The function to handle dragover events",
      "params": {
        "event": {
          "type": "Object",
          "desc": "The event associated with the dragover"
        },
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object associated with the date and optional time (if an interval)"
        },
        "type": {
          "type": "String",
          "desc": "This can be 'day', 'interval' or 'resource'",
          "examples": [
            "day",
            "interval",
            "resource"
          ]
        },
        "index": {
          "type": "Number",
          "desc": "The column-count index location of the start of the drag (only available if property `column-count` is set)"
        }
      },
      "applicable": [
        "All"
      ],
      "returns": {
        "type": "Boolean",
        "desc": "If the event was handled"
      },
      "examples": [
        ":drag-over-func=\"onDragOver\""
      ]
    },
    "drop-func": {
      "type": "Function",
      "category": "behavior",
      "desc": "The function to handle drop events",
      "params": {
        "event": {
          "type": "Object",
          "desc": "The event associated with the drop"
        },
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object associated with the date and optional time (if an interval) of the drop"
        },
        "type": {
          "type": "String",
          "desc": "This can be 'day', 'interval' or 'resource'",
          "examples": [
            "day",
            "interval",
            "resource"
          ]
        },
        "index": {
          "type": "Number",
          "desc": "The column-count index location of the start of the drag (only available if property `column-count` is set)"
        }
      },
      "applicable": [
        "All"
      ],
      "returns": {
        "type": "Boolean",
        "desc": "If the event was handled"
      },
      "examples": [
        ":drop-func=\"onDrop\""
      ]
    },
    "no-scroll": {
      "type": "Boolean",
      "category": "style",
      "desc": "Turns off the internal scrollbar. Useful if you want to handle your own scrolling",
      "default": "",
      "applicable": [
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "week",
        "month-interval",
        "custom-interval",
        "all scheduler",
        "all agenda"
      ]
    },
    "column-header-before": {
      "type": "Boolean",
      "category": "style",
      "desc": "Turns on the column-header-before scoped slot",
      "applicable": [
        "day"
      ]
    },
    "column-header-after": {
      "type": "Boolean",
      "category": "style",
      "desc": "Turns on the column-header-after scoped slot",
      "applicable": [
        "day"
      ]
    },
    "column-count": {
      "type": [
        "Number",
        "String"
      ],
      "category": "behavior",
      "desc": "Applicable only for day view. Show the same day x number of times in columns. Scoped slots get this data as index in passed object",
      "default": 1,
      "applicable": [
        "day"
      ],
      "examples": [
        "column-count=\"3\"",
        "column-count=\"5\""
      ]
    },
    "column-index-start": {
      "type": [
        "Number",
        "String"
      ],
      "category": "content",
      "desc": "Applicable only for day view. This is the starting index. This allows you to create a paging system (next/prev) when using column-count property",
      "default": 0,
      "applicable": [
        "day"
      ],
      "examples": [
        "column-index-start=\"0\"",
        "column-index-start=\"2\""
      ]
    },
    "short-interval-label": {
      "type": "Boolean",
      "category": "style",
      "desc": "Makes interval labels short",
      "applicable": [
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "week",
        "month-interval",
        "custom-interval",
        "all scheduler"
      ]
    },
    "interval-height": {
      "type": [
        "Number",
        "String"
      ],
      "category": "behavior",
      "desc": "The maximum height in pixels for the interval height",
      "default": "40",
      "applicable": [
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "week",
        "month-interval",
        "custom-interval",
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "examples": [
        "interval-height=\"60\"",
        "interval-height=\"100\""
      ]
    },
    "interval-style": {
      "type": "Function",
      "category": "style",
      "desc": "Gets called to provide custom styling of an interval",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "A timestamp object associated with the interval"
        }
      },
      "returns": {
        "type": [
          "Array",
          "Object",
          "String"
        ],
        "desc": "A Vue style object",
        "examples": [
          "{ color: #ccc; }"
        ]
      },
      "default": "{}",
      "applicable": [
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "week",
        "month-interval",
        "custom-interval",
        "all scheduler"
      ],
      "examples": [
        "interval-style=\"background-color: #c0c0c0\"",
        ":interval-style=\"myIntervalStyle\""
      ]
    },
    "interval-minutes": {
      "type": [
        "Number",
        "String"
      ],
      "category": "behavior",
      "desc": "The number of minutes in an interval",
      "default": "60",
      "applicable": [
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "week",
        "month-interval",
        "custom-interval",
        "all scheduler"
      ],
      "examples": [
        "interval-minutes=\"15\"",
        "interval-minutes=\"30\""
      ]
    },
    "interval-count": {
      "type": [
        "Number",
        "String"
      ],
      "category": "behavior",
      "desc": "The number intervals to use. If interval-minutes is set to 30 then you would set interval count to 48 – double that of regular",
      "default": "24",
      "applicable": [
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "week",
        "month-interval",
        "custom-interval",
        "all scheduler"
      ],
      "examples": [
        "interval-count=\"48\"",
        "interval-count=\"96\""
      ]
    },
    "interval-start": {
      "type": [
        "Number",
        "String"
      ],
      "category": "behavior",
      "desc": "The starting interval",
      "default": "0",
      "applicable": [
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "week",
        "month-interval",
        "custom-interval",
        "all scheduler"
      ],
      "examples": [
        "interval-start=\"6\"",
        "interval-start=\"8\""
      ]
    },
    "hour24-format": {
      "type": "Boolean",
      "category": "style",
      "desc": "Show intervals in 24 hour format",
      "applicable": [
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "week",
        "month-interval",
        "custom-interval",
        "all scheduler"
      ]
    },
    "day-height": {
      "type": [
        "Number",
        "String"
      ],
      "category": "behavior",
      "desc": "The maximum height in pixels for the day height. Using 0 will make the rows variable height based on content.",
      "default": "0",
      "applicable": [
        "month"
      ],
      "examples": [
        "day-height=\"80\"",
        "day-height=\"100\""
      ]
    },
    "day-padding": {
      "type": "String",
      "category": "style",
      "desc": "Overrides the padding to be used for a day element. You can use any CSS padding format",
      "default": "48px 2px",
      "applicable": [
        "month"
      ],
      "examples": [
        "day-padding=\"20px 5px\""
      ]
    },
    "day-style": {
      "type": "Function",
      "category": "style",
      "desc": "Gets called to provide custom styling of a day",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "A timestamp object associated with the day"
        }
      },
      "returns": {
        "type": [
          "Array",
          "Object",
          "String"
        ],
        "desc": "A Vue style object",
        "examples": [
          "{ color: #ccc; }"
        ]
      },
      "default": "null",
      "applicable": [
        "month"
      ],
      "examples": [
        "day-style=\"background-color: #c0c0c0\"",
        ":day-style=\"dayStyle\""
      ]
    },
    "day-class": {
      "type": "Function",
      "category": "style",
      "addedIn": "v1.3.1",
      "desc": "Gets called to provide custom styling (via classes) of a day",
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "A timestamp object associated with the day"
        }
      },
      "returns": {
        "type": [
          "Array",
          "Object",
          "String"
        ],
        "desc": "A Vue style object of classes",
        "examples": [
          "{ 'q-selected-day': true }"
        ]
      },
      "default": "null",
      "applicable": [
        "month"
      ],
      "examples": [
        ":day-class=\"getDayClass\""
      ]
    },
    "min-weeks": {
      "type": [
        "Number",
        "String"
      ],
      "category": "model",
      "desc": "The minimum number of weeks to be displayed",
      "default": 1,
      "applicable": [
        "month"
      ],
      "examples": [
        "min-weeks=\"2\""
      ]
    },
    "short-month-label": {
      "type": "Boolean",
      "category": "style",
      "desc": "Makes the month label short. January becomes Jan...",
      "applicable": [
        "month"
      ]
    },
    "show-work-weeks": {
      "type": "Boolean",
      "category": "content",
      "desc": "Show work weeks",
      "applicable": [
        "month"
      ]
    },
    "no-default-header-btn": {
      "type": "Boolean",
      "category": "content",
      "desc": "Do not display the day button in the header",
      "applicable": [
        "day",
        "scheduler"
      ]
    },
    "no-default-header-text": {
      "type": "Boolean",
      "category": "content",
      "desc": "Do not display the day text in the header",
      "applicable": [
        "day",
        "scheduler"
      ]
    },
    "show-month-label": {
      "type": "Boolean",
      "category": "content",
      "desc": "Shows the month label - this occurs on the 1st of the month",
      "applicable": [
        "month"
      ]
    },
    "show-day-of-year-label": {
      "type": "Boolean",
      "category": "content",
      "desc": "Show the say of the year - this occurs in the top right of each day element. If show-month-label is true, then that day is skipped",
      "applicable": [
        "month"
      ]
    },
    "resources": {
      "type": "Array",
      "category": "model",
      "required": true,
      "desc": "An array of objects with a single key of label. You can add other keys if you like, which will be passed back on the appropriate scoped slots",
      "applicable": [
        "scheduler"
      ],
      "examples": [
        "[{ label: 'John' },{ label: 'Susan' }]"
      ]
    },
    "resource-height": {
      "type": [
        "Number",
        "String"
      ],
      "category": "behavior",
      "desc": "The maximum height in pixels for the resource height",
      "default": "70",
      "applicable": [
        "scheduler"
      ],
      "examples": [
        "resource-height=\"80\"",
        "resource-height=\"100\""
      ]
    },
    "resource-width": {
      "type": [
        "Number",
        "String"
      ],
      "category": "style",
      "desc": "The maximum width in pixels for the resource width",
      "applicable": [
        "scheduler"
      ],
      "examples": [
        "resource-width=\"120\"",
        "resource-width=\"200\""
      ]
    },
    "resource-style": {
      "type": "Function",
      "category": "style",
      "desc": "Gets called to provide custom styling of a resource",
      "params": {
        "data": {
          "type": "Object",
          "desc": "The data passed to the function",
          "definition": {
            "timestamp": {
              "type": "Object",
              "desc": "A timestamp object associated with the interval"
            },
            "index": {
              "type": "Number",
              "desc": "The resource index"
            },
            "resource": {
              "type": "Object",
              "desc": "The resource object"
            }
          }
        }
      },
      "returns": {
        "type": [
          "Array",
          "Object",
          "String"
        ],
        "desc": "A Vue style object",
        "examples": [
          "{ color: #ccc; }"
        ]
      },
      "default": "{}",
      "applicable": [
        "scheduler"
      ],
      "examples": [
        ":resource-style=\"resourceStyle\""
      ]
    },
    "selected-start-end-dates": {
      "type": "Array",
      "category": "behavior",
      "addedIn": "v1.2.0",
      "desc": "An array of two dates (YYYY-mm-dd) for selection purposes",
      "applicable": [
        "month"
      ],
      "examples": [
        ":selected-start-end-dates=\"getStartEndDates\""
      ]
    },
    "selected-dates": {
      "type": "Array",
      "category": "model",
      "addedIn": "v1.3.14",
      "desc": "An array of string dates in the form YYYY-mm-dd that will be selected",
      "applicable": [
        "month"
      ],
      "examples": [
        ":selected-dates=\"['2019-04-01', '2019-04-02', '2019-04-03', '2019-04-04']\""
      ]
    },
    "mini-mode": {
      "type": [
        "Boolean",
        "String"
      ],
      "category": "behavior",
      "addedIn": "v1.3.0",
      "values": [
        true,
        false,
        "auto"
      ],
      "desc": "When `true` puts the calendar into mini-mode. When `auto`, then the property `breakpoint` is used to determine when the calendar will be put into mini-mode",
      "applicable": [
        "month"
      ],
      "examples": [
        "mini-mode",
        ":mini-mode=\"true\"",
        "mini-mode=\"auto\""
      ]
    },
    "breakpoint": {
      "type": "String",
      "category": "behavior",
      "addedIn": "v1.3.0",
      "values": [
        "xs",
        "sm",
        "md",
        "lg",
        "xl"
      ],
      "desc": "This property is used when `mini-mode` is set with `auto`",
      "applicable": [
        "month"
      ],
      "examples": [
        "breakpoint=\"sm\"",
        "breakpoint=\"md\""
      ]
    },
    "month-label-size": {
      "type": "String",
      "category": "style",
      "addedIn": "v1.3.0",
      "values": [
        "xs",
        "sm",
        "md",
        "lg",
        "xl"
      ],
      "desc": "This property is used change the size of the month label button. This property is ignored when `mini-mode` is set to true",
      "applicable": [
        "month"
      ],
      "examples": [
        "month-label-size=\"sm\"",
        "month-label-size=\"md\""
      ]
    },
    "left-column-options": {
      "type": "Object",
      "category": "behavior",
      "addedIn": "v1.5.0",
      "desc": "An array of objects used to add columns to the left side of the agenda. Each object must have an id and label key or define the id object key using the `column-options-id` and the label using the `column-options-label` properties. The value of the id should be unique for each object. The object is passed to slots",
      "applicable": [
        "week-agenda"
      ],
      "examples": [
        ":left-column-options=\"leftColumnOptions\""
      ]
    },
    "right-column-options": {
      "type": "Object",
      "category": "behavior",
      "addedIn": "v1.5.0",
      "desc": "An array of objects used to add columns to the right side of the agenda. Each object must have an id and label key or define the id object key using the `column-options-id` and the label using the `column-options-label` properties. The value of the id should be unique for each object. The object is passed to slots",
      "applicable": [
        "week-agenda"
      ],
      "examples": [
        ":right-column-options=\"rightColumnOptions\""
      ]
    },
    "column-options-id": {
      "type": "String",
      "category": "behavior",
      "addedIn": "v1.5.0",
      "desc": "The key in the object to use for `left-column-options` or `right-column-options` properties to define the id, otherwise `id` will be used",
      "applicable": [
        "week-agenda"
      ],
      "examples": [
        "column-options-id=\"id\""
      ]
    },
    "column-options-label": {
      "type": "String",
      "category": "behavior",
      "addedIn": "v1.5.0",
      "desc": "The key in the object to use for `left-column-options` or `right-column-options` properties to define the label, otherwise `label` will be used",
      "applicable": [
        "week-agenda"
      ],
      "examples": [
        "column-options-label=\"name\""
      ]
    }
  },
  "scopedSlots": {
    "day-header": {
      "desc": "index is added if using `column-count` property",
      "scope": {
        "day": {
          "type": "Object",
          "desc": "Timestamp object"
        }
      },
      "applicable": [
        "day"
      ]
    },
    "day-header-label": {
      "desc": "Used to replace the label",
      "scope": {
        "day": {
          "type": "Object",
          "desc": "Timestamp object"
        }
      },
      "applicable": [
        "day",
        "week-agenda"
      ]
    },
    "day-body": {
      "desc": "index is added if using `column-count` property",
      "scope": {
        "day": {
          "type": "Object",
          "desc": "Timestamp object"
        }
      },
      "applicable": [
        "day",
        "week-agenda"
      ]
    },
    "day-container": {
      "desc": "The container is everything below the headers, including the intervals",
      "scope": {
        "days": {
          "type": "Array",
          "desc": "An array of timestamp objects that are to be displayed in the container. This slot does not replace the container, but instead, allows you to add to it. Example: use css 'position: absolute` to create a 'current time' bar."
        }
      }
    },
    "intervals-header": {
      "desc": "Use to render items in the intervals header",
      "scope": {
        "days": {
          "type": "Array",
          "desc": "An array of Timestamp objects"
        }
      },
      "applicable": [
        "day"
      ]
    },
    "interval": {
      "desc": "index is added if using `column-count` property",
      "scope": {
        "timeStartPos": {
          "type": "Function",
          "desc": "Calculates the start position of the passed in time",
          "params": {
            "time": {
              "type": "String",
              "desc": "The time for which a position is needed in 24-hour format (HHmm)",
              "examples": [
                "09:00"
              ]
            }
          },
          "returns": {
            "type": "Number",
            "desc": "The absolute y starting position",
            "examples": [
              "120",
              "482"
            ]
          }
        },
        "timeDurationHeight": {
          "type": "Function",
          "desc": "Given a duration (in seconds), will return the css height value",
          "params": {
            "duration": {
              "type": [
                "Number",
                "String"
              ],
              "desc": "The number of seconds for the event to calculate it's height",
              "examples": [
                "300",
                "900"
              ]
            }
          },
          "returns": {
            "type": "Number",
            "desc": "The height (in pixels) to be used for the event",
            "examples": [
              "80",
              "120"
            ]
          }
        }
      },
      "applicable": [
        "day"
      ]
    },
    "column-header-before": {
      "desc": "Use to render items before the column header",
      "scope": {
        "data": {
          "type": "Object",
          "desc": "Timestamp object"
        }
      },
      "applicable": [
        "day"
      ]
    },
    "column-header-after": {
      "desc": "Use to render items after the column header",
      "scope": {
        "data": {
          "type": "Object",
          "desc": "Timestamp object"
        }
      },
      "applicable": [
        "day"
      ]
    },
    "day": {
      "desc": "Use to add items to the `day` rendering",
      "scope": {
        "outside": {
          "type": "Boolean",
          "desc": "true if the date is outside of the calendar month, but still displayed"
        },
        "day": {
          "type": "Object",
          "desc": "A destructured timestamp for the day of the slotted content"
        },
        "miniMode": {
          "type": "Boolean",
          "desc": "true if currently in mini-mode. Handle if you have set mini-mode to `auto`"
        }
      },
      "applicable": [
        "month"
      ]
    },
    "day-label": {
      "desc": "Use to replace the `day label`",
      "scope": {
        "dayLabel": {
          "type": "String",
          "desc": "The string of the dayLabel"
        },
        "day": {
          "type": "Object",
          "desc": "A destructured timestamp for the day of the slotted content"
        },
        "miniMode": {
          "type": "Boolean",
          "desc": "true if currently in mini-mode. Handle if you have set mini-mode to `auto`"
        }
      },
      "applicable": [
        "month"
      ]
    },
    "month-label": {
      "desc": "Use to replace the `month label`. Not applicable in `mini-mode`",
      "scope": {
        "monthLabel": {
          "type": "String",
          "desc": "The string of the monthLabel"
        },
        "day": {
          "type": "Object",
          "desc": "A destructured timestamp for the day of the slotted content"
        },
        "miniMode": {
          "type": "Boolean",
          "desc": "true if currently in mini-mode. Handle if you have set mini-mode to `auto`"
        }
      },
      "applicable": [
        "month"
      ]
    },
    "day-of-year": {
      "desc": "Use to replace the `day of year` label. Not applicable in `mini-mode`",
      "scope": {
        "data": {
          "type": "Object",
          "desc": "Timestamp object"
        }
      },
      "applicable": [
        "month"
      ]
    },
    "workweek": {
      "desc": "",
      "scope": {
        "workweekLabel": {
          "type": "String",
          "desc": "The string for the workweek label"
        },
        "date": {
          "type": "Object",
          "desc": "Timestamp object, workWeekLabel and miniMode"
        },
        "miniMode": {
          "type": "Boolean",
          "desc": "true if currently in mini-mode. Handle if you have set mini-mode to `auto`"
        }
      },
      "applicable": [
        "month"
      ]
    },
    "week": {
      "desc": "",
      "applicable": [
        "month"
      ],
      "scope": {
        "week": {
          "type": "Array",
          "desc": "This is an array of timestamp objects. One for each day of the week to be displayed"
        },
        "weekdays": {
          "type": "Array",
          "desc": "This is the days of the week and in which order they are displayed",
          "examples": [
            "weekdays: '[1,2,3,4,5,6,0]'",
            "weekdays: '[1,2,3,4,5]'"
          ]
        },
        "miniMode": {
          "type": "Boolean",
          "desc": "true if currently in mini-mode. Handle if you have set mini-mode to `auto`"
        }
      }
    },
    "scheduler-resources-header": {
      "desc": "",
      "scope": {
        "data": {
          "type": "Object",
          "desc": ""
        }
      },
      "applicable": [
        "scheduler"
      ]
    },
    "scheduler-day-header": {
      "desc": "",
      "scope": {
        "data": {
          "type": "Object",
          "desc": ""
        }
      },
      "applicable": [
        "scheduler"
      ]
    },
    "scheduler-column-header-before": {
      "desc": "",
      "scope": {
        "data": {
          "type": "Object",
          "desc": ""
        }
      },
      "applicable": [
        "scheduler"
      ]
    },
    "scheduler-column-header-after": {
      "desc": "",
      "scope": {
        "data": {
          "type": "Object",
          "desc": ""
        }
      },
      "applicable": [
        "scheduler"
      ]
    },
    "scheduler-resource-day": {
      "desc": "",
      "scope": {
        "data": {
          "type": "Object",
          "desc": ""
        }
      },
      "applicable": [
        "scheduler"
      ]
    },
    "scheduler-resource": {
      "desc": "",
      "scope": {
        "data": {
          "type": "Object",
          "desc": ""
        }
      },
      "applicable": [
        "scheduler"
      ]
    },
    "column-header": {
      "desc": "Use this slot to add to the column header when properties `left-column-options` or `right-column-options` are used",
      "addedIn": "v1.5.0",
      "scope": {
        "data": {
          "type": "Object",
          "desc": "This is the object passed to properties `left-column-options` or `right-column-options`"
        }
      },
      "applicable": [
        "week-agenda"
      ]
    },
    "column-body": {
      "desc": "Use this slot to add to the column body when properties `left-column-options` or `right-column-options` are used",
      "addedIn": "v1.5.0",
      "scope": {
        "data": {
          "type": "Object",
          "desc": "This is the object passed to properties `left-column-options` or `right-column-options`"
        }
      },
      "applicable": [
        "week-agenda"
      ]
    }
  },
  "events": {
    "input": {
      "desc": "v-model; Emitted when calendar date changes",
      "applicable": [
        "All"
      ],
      "params": {
        "value": {
          "type": "String",
          "desc": "In YYYY-mm-dd format",
          "required": true
        }
      }
    },
    "change": {
      "desc": "Emitted when the calendar dates change. For instance, if in `month` view, the `start` contains the timestamp object for the 1st of the month, and `end` contains the timestamp object for the last day of the month. For week view it's the first day of the displayed week and last day of the displayed week",
      "applicable": [
        "All"
      ],
      "params": {
        "start": {
          "type": "Object",
          "desc": "The timestamp object for the first valid date being displayed"
        },
        "end": {
          "type": "Object",
          "desc": "The timestamp object for the last valid date being displayed"
        }
      }
    },
    "moved": {
      "desc": "Emitted when the date is moved",
      "applicable": [
        "All"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object of the move. For instance, if in month view, this will be the timestamp object containing the 1st of the month"
        }
      }
    },
    "click:date": {
      "desc": "Occurs on date button",
      "applicable": [
        "All"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "contextmenu:date": {
      "desc": "Occurs on date button",
      "applicable": [
        "All"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mousedown:date": {
      "desc": "Occurs on date button",
      "applicable": [
        "All"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mouseup:date": {
      "desc": "Occurs on date button",
      "applicable": [
        "All"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mouseenter:date": {
      "desc": "Occurs on date button",
      "applicable": [
        "All"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mouseleave:date": {
      "desc": "Occurs on date button",
      "applicable": [
        "All"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mousemove:date": {
      "desc": "Occurs on date button",
      "applicable": [
        "All"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "touchstart:date": {
      "desc": "Occurs on date button",
      "applicable": [
        "All"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "touchend:date": {
      "desc": "Occurs on date button",
      "applicable": [
        "All"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "touchmove:date": {
      "desc": "Occurs on date button",
      "applicable": [
        "All"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "click:day": {
      "desc": "Occurs on day area",
      "applicable": [
        "month"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "contextmenu:day": {
      "desc": "Occurs on day area",
      "applicable": [
        "month"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mousedown:day": {
      "desc": "Occurs on day area",
      "applicable": [
        "month"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mouseup:day": {
      "desc": "Occurs on day area",
      "applicable": [
        "month"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mouseenter:day": {
      "desc": "Occurs on day area",
      "applicable": [
        "month"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mouseleave:day": {
      "desc": "Occurs on day area",
      "applicable": [
        "month"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mousemove:day": {
      "desc": "Occurs on day area",
      "applicable": [
        "month"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "touchstart:day": {
      "desc": "Occurs on day area",
      "applicable": [
        "month"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "touchend:day": {
      "desc": "Occurs on day area",
      "applicable": [
        "month"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "touchmove:day": {
      "desc": "Occurs on day area",
      "applicable": [
        "month"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "click:interval": {
      "desc": "Occurs on interval area",
      "applicable": [
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "week",
        "month",
        "month-interval",
        "custom-interval",
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "contextmenu:interval": {
      "desc": "Occurs on interval area",
      "applicable": [
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "week",
        "month",
        "month-interval",
        "custom-interval",
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mousedown:interval": {
      "desc": "Occurs on interval area",
      "applicable": [
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "week",
        "month",
        "month-interval",
        "custom-interval",
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mouseup:interval": {
      "desc": "Occurs on interval area",
      "applicable": [
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "week",
        "month",
        "month-interval",
        "custom-interval",
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mouseenter:interval": {
      "desc": "Occurs on interval area",
      "applicable": [
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "week",
        "month",
        "month-interval",
        "custom-interval",
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mouseleave:interval": {
      "desc": "Occurs on interval area",
      "applicable": [
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "week",
        "month",
        "month-interval",
        "custom-interval",
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mousemove:interval": {
      "desc": "Occurs on interval area",
      "applicable": [
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "week",
        "month",
        "month-interval",
        "custom-interval",
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "touchstart:interval": {
      "desc": "Occurs on interval area",
      "applicable": [
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "week",
        "month",
        "month-interval",
        "custom-interval",
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "touchend:interval": {
      "desc": "Occurs on interval area",
      "applicable": [
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "week",
        "month",
        "month-interval",
        "custom-interval",
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "touchmove:interval": {
      "desc": "Occurs on interval area",
      "applicable": [
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "week",
        "month",
        "month-interval",
        "custom-interval",
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "click:time": {
      "desc": "Occurs on interval time area",
      "applicable": [
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "week",
        "month",
        "month-interval",
        "custom-interval",
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "contextmenu:time": {
      "desc": "Occurs on interval time area",
      "applicable": [
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "week",
        "month",
        "month-interval",
        "custom-interval",
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mousedown:time": {
      "desc": "Occurs on interval time area",
      "applicable": [
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "week",
        "month",
        "month-interval",
        "custom-interval",
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mouseup:time": {
      "desc": "Occurs on interval time area",
      "applicable": [
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "week",
        "month",
        "month-interval",
        "custom-interval",
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mouseenter:time": {
      "desc": "Occurs on interval time area",
      "applicable": [
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "week",
        "month",
        "month-interval",
        "custom-interval",
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mouseleave:time": {
      "desc": "Occurs on interval time area",
      "applicable": [
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "week",
        "month",
        "month-interval",
        "custom-interval",
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "mousemove:time": {
      "desc": "Occurs on interval time area",
      "applicable": [
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "week",
        "month",
        "month-interval",
        "custom-interval",
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "touchstart:time": {
      "desc": "Occurs on interval time area",
      "applicable": [
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "week",
        "month",
        "month-interval",
        "custom-interval",
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "touchend:time": {
      "desc": "Occurs on interval time area",
      "applicable": [
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "week",
        "month",
        "month-interval",
        "custom-interval",
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "touchmove:time": {
      "desc": "Occurs on interval time area",
      "applicable": [
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "week",
        "month",
        "month-interval",
        "custom-interval",
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "The timestamp object"
        }
      }
    },
    "click:resource": {
      "desc": "Occurs on resource area",
      "applicable": [
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object and resource index"
        }
      }
    },
    "contextmenu:resource": {
      "desc": "Occurs on resource area",
      "applicable": [
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object and resource index"
        }
      }
    },
    "mousedown:resource": {
      "desc": "Occurs on resource area",
      "applicable": [
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object and resource index"
        }
      }
    },
    "mouseup:resource": {
      "desc": "Occurs on resource area",
      "applicable": [
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object and resource index"
        }
      }
    },
    "mouseenter:resource": {
      "desc": "Occurs on resource area",
      "applicable": [
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object and resource index"
        }
      }
    },
    "mouseleave:resource": {
      "desc": "Occurs on resource area",
      "applicable": [
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object and resource index"
        }
      }
    },
    "mousemove:resource": {
      "desc": "Occurs on resource area",
      "applicable": [
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object and resource index"
        }
      }
    },
    "touchstart:resource": {
      "desc": "Occurs on resource area",
      "applicable": [
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object and resource index"
        }
      }
    },
    "touchend:resource": {
      "desc": "Occurs on resource area",
      "applicable": [
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object and resource index"
        }
      }
    },
    "touchmove:resource": {
      "desc": "Occurs on resource area",
      "applicable": [
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object and resource index"
        }
      }
    },
    "click:resource:day": {
      "desc": "Occurs on resource day area",
      "applicable": [
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object, resource index and the timestamp object"
        }
      }
    },
    "contextmenu:resource:day": {
      "desc": "Occurs on resource day area",
      "applicable": [
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object, resource index and the timestamp object"
        }
      }
    },
    "mousedown:resource:day": {
      "desc": "Occurs on resource day area",
      "applicable": [
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object, resource index and the timestamp object"
        }
      }
    },
    "mouseup:resource:day": {
      "desc": "Occurs on resource day area",
      "applicable": [
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object, resource index and the timestamp object"
        }
      }
    },
    "mouseenter:resource:day": {
      "desc": "Occurs on resource day area",
      "applicable": [
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object, resource index and the timestamp object"
        }
      }
    },
    "mouseleave:resource:day": {
      "desc": "Occurs on resource day area",
      "applicable": [
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object, resource index and the timestamp object"
        }
      }
    },
    "mousemove:resource:day": {
      "desc": "Occurs on resource day area",
      "applicable": [
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object, resource index and the timestamp object"
        }
      }
    },
    "touchstart:resource:day": {
      "desc": "Occurs on resource day area",
      "applicable": [
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object, resource index and the timestamp object"
        }
      }
    },
    "touchend:resource:day": {
      "desc": "Occurs on resource day area",
      "applicable": [
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object, resource index and the timestamp object"
        }
      }
    },
    "touchmove:resource:day": {
      "desc": "Occurs on resource day area",
      "applicable": [
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "timestamp": {
          "type": "Object",
          "desc": "Object contains resource object, resource index and the timestamp object"
        }
      }
    },
    "click:column:head": {
      "addedIn": "v1.5.0",
      "desc": "Occurs on column header",
      "applicable": [
        "week-agenda"
      ],
      "params": {
        "data": {
          "type": "Object",
          "desc": "Contains the object passed for the column when either property `left-column-options` or `right-column-options` are used"
        }
      }
    },
    "contextmenu:column:head": {
      "addedIn": "v1.5.0",
      "desc": "Occurs on column header",
      "applicable": [
        "week-agenda"
      ],
      "params": {
        "data": {
          "type": "Object",
          "desc": "Contains the object passed for the column when either property `left-column-options` or `right-column-options` are used"
        }
      }
    },
    "mousedown:column:head": {
      "addedIn": "v1.5.0",
      "desc": "Occurs on column header",
      "applicable": [
        "week-agenda"
      ],
      "params": {
        "data": {
          "type": "Object",
          "desc": "Contains the object passed for the column when either property `left-column-options` or `right-column-options` are used"
        }
      }
    },
    "mouseup:column:head": {
      "addedIn": "v1.5.0",
      "desc": "Occurs on column header",
      "applicable": [
        "week-agenda"
      ],
      "params": {
        "data": {
          "type": "Object",
          "desc": "Contains the object passed for the column when either property `left-column-options` or `right-column-options` are used"
        }
      }
    },
    "mouseenter:column:head": {
      "addedIn": "v1.5.0",
      "desc": "Occurs on column header",
      "applicable": [
        "week-agenda"
      ],
      "params": {
        "data": {
          "type": "Object",
          "desc": "Contains the object passed for the column when either property `left-column-options` or `right-column-options` are used"
        }
      }
    },
    "mouseleave:column:head": {
      "addedIn": "v1.5.0",
      "desc": "Occurs on column header",
      "applicable": [
        "week-agenda"
      ],
      "params": {
        "data": {
          "type": "Object",
          "desc": "Contains the object passed for the column when either property `left-column-options` or `right-column-options` are used"
        }
      }
    },
    "mousemove:column:head": {
      "addedIn": "v1.5.0",
      "desc": "Occurs on column header",
      "applicable": [
        "week-agenda"
      ],
      "params": {
        "data": {
          "type": "Object",
          "desc": "Contains the object passed for the column when either property `left-column-options` or `right-column-options` are used"
        }
      }
    },
    "touchstart:column:head": {
      "addedIn": "v1.5.0",
      "desc": "Occurs on column header",
      "applicable": [
        "week-agenda"
      ],
      "params": {
        "data": {
          "type": "Object",
          "desc": "Contains the object passed for the column when either property `left-column-options` or `right-column-options` are used"
        }
      }
    },
    "touchend:column:head": {
      "addedIn": "v1.5.0",
      "desc": "Occurs on column header",
      "applicable": [
        "week-agenda"
      ],
      "params": {
        "data": {
          "type": "Object",
          "desc": "Contains the object passed for the column when either property `left-column-options` or `right-column-options` are used"
        }
      }
    },
    "touchmove:column:head": {
      "addedIn": "v1.5.0",
      "desc": "Occurs on column header",
      "applicable": [
        "week-agenda"
      ],
      "params": {
        "data": {
          "type": "Object",
          "desc": "Contains the object passed for the column when either property `left-column-options` or `right-column-options` are used"
        }
      }
    },
    "click:column": {
      "addedIn": "v1.5.0",
      "desc": "Occurs on column",
      "applicable": [
        "week-agenda"
      ],
      "params": {
        "data": {
          "type": "Object",
          "desc": "Contains the object passed for the column when either property `left-column-options` or `right-column-options` are used"
        }
      }
    },
    "contextmenu:column": {
      "addedIn": "v1.5.0",
      "desc": "Occurs on column",
      "applicable": [
        "week-agenda"
      ],
      "params": {
        "data": {
          "type": "Object",
          "desc": "Contains the object passed for the column when either property `left-column-options` or `right-column-options` are used"
        }
      }
    },
    "mousedown:column": {
      "addedIn": "v1.5.0",
      "desc": "Occurs on column",
      "applicable": [
        "week-agenda"
      ],
      "params": {
        "data": {
          "type": "Object",
          "desc": "Contains the object passed for the column when either property `left-column-options` or `right-column-options` are used"
        }
      }
    },
    "mouseup:column": {
      "addedIn": "v1.5.0",
      "desc": "Occurs on column",
      "applicable": [
        "week-agenda"
      ],
      "params": {
        "data": {
          "type": "Object",
          "desc": "Contains the object passed for the column when either property `left-column-options` or `right-column-options` are used"
        }
      }
    },
    "mouseenter:column": {
      "addedIn": "v1.5.0",
      "desc": "Occurs on column",
      "applicable": [
        "week-agenda"
      ],
      "params": {
        "data": {
          "type": "Object",
          "desc": "Contains the object passed for the column when either property `left-column-options` or `right-column-options` are used"
        }
      }
    },
    "mouseleave:column": {
      "addedIn": "v1.5.0",
      "desc": "Occurs on column",
      "applicable": [
        "week-agenda"
      ],
      "params": {
        "data": {
          "type": "Object",
          "desc": "Contains the object passed for the column when either property `left-column-options` or `right-column-options` are used"
        }
      }
    },
    "mousemove:column": {
      "addedIn": "v1.5.0",
      "desc": "Occurs on column",
      "applicable": [
        "week-agenda"
      ],
      "params": {
        "data": {
          "type": "Object",
          "desc": "Contains the object passed for the column when either property `left-column-options` or `right-column-options` are used"
        }
      }
    },
    "touchstart:column": {
      "addedIn": "v1.5.0",
      "desc": "Occurs on column",
      "applicable": [
        "week-agenda"
      ],
      "params": {
        "data": {
          "type": "Object",
          "desc": "Contains the object passed for the column when either property `left-column-options` or `right-column-options` are used"
        }
      }
    },
    "touchend:column": {
      "addedIn": "v1.5.0",
      "desc": "Occurs on column",
      "applicable": [
        "week-agenda"
      ],
      "params": {
        "data": {
          "type": "Object",
          "desc": "Contains the object passed for the column when either property `left-column-options` or `right-column-options` are used"
        }
      }
    },
    "touchmove:column:": {
      "addedIn": "v1.5.0",
      "desc": "Occurs on column",
      "applicable": [
        "week-agenda"
      ],
      "params": {
        "data": {
          "type": "Object",
          "desc": "Contains the object passed for the column when either property `left-column-options` or `right-column-options` are used"
        }
      }
    }
  },
  "methods": {
    "prev": {
      "desc": "Triggers component to display previous (ex: day, week, month)",
      "applicable": [
        "All"
      ]
    },
    "next": {
      "desc": "Triggers component to display next (ex: day, week, month)",
      "applicable": [
        "All"
      ]
    },
    "move": {
      "desc": "Triggers component to move for count iterations, depending on positive (forwards) or negative (backwards) value",
      "applicable": [
        "All"
      ],
      "params": {
        "count": {
          "type": "Number",
          "desc": "The amount of iterations to move (negative for backwards, positive for forwards)",
          "examples": [
            "-5 (moves 5 iterations backward - if in `month` view, this would be -5 months",
            "5 (moves 5 iterations forward - if in `day` view, this would be 5 days"
          ]
        }
      }
    },
    "updateCurrent": {
      "desc": "Update various values to be consistent with current date",
      "applicable": [
        "All"
      ]
    },
    "timeStartPos": {
      "desc": "Calculates the start position of the passed in time",
      "applicable": [
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "week",
        "month-interval",
        "custom-interval",
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "time": {
          "type": "String",
          "desc": "The time for which a position is needed in 24-hour format (HHmm)",
          "examples": [
            "09:00"
          ]
        }
      },
      "returns": {
        "type": "Number",
        "desc": "The absolute y starting position",
        "examples": [
          "120",
          "482"
        ]
      }
    },
    "timeDurationHeight": {
      "desc": "Given a duration (in seconds), will return the css height value",
      "applicable": [
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "week",
        "month-interval",
        "custom-interval",
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "duration": {
          "type": [
            "Number",
            "String"
          ],
          "desc": "The number of seconds for the event to calculate it's height",
          "examples": [
            "300",
            "900"
          ]
        }
      },
      "returns": {
        "type": "Number",
        "desc": "The height (in pixels) to be used for the event",
        "examples": [
          "80",
          "120"
        ]
      }
    },
    "scrollToTime": {
      "desc": "When on an interval view, scroll to the passed in time",
      "applicable": [
        "day",
        "2day",
        "3day",
        "4day",
        "5day",
        "6day",
        "week",
        "month-interval",
        "custom-interval",
        "scheduler",
        "week-scheduler",
        "month-scheduler",
        "custom-scheduler"
      ],
      "params": {
        "time": {
          "type": "String",
          "desc": "The time in which to scoll to. If the time is already visible on the viewport, this function will have no affect.",
          "examples": [
            "09:00"
          ]
        }
      }
    }
  }
}